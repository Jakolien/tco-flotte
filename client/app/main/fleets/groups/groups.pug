.main__fleets__groups(ui-view="")
  .main__fleets__groups__header
    h3 {{ 'create_group_title' | translate }}
    p.lead {{ 'create_group_description' | translate }}
  .row
    .col-md-5.push-md-7.push-lg-6.text-muted
      |  {{ 'create_group_help' | translate }}
    .col-md-7.col-lg-6.pull-md-5
      .card
        form.card-block(name="createForm")
          fieldset.form-group(ng-repeat='input in $ctrl.inputs')
            div(ng-switch=":: input.getType()")
              .row(ng-switch-when="enum", ng-class="{ 'input-group': input.meta.unit }")
                .col-form-label.col-lg-4
                  label(for="input-{{ input.meta.id }}")
                    | {{ input.meta.label | translate }}
                .col-lg-8
                  select.form-control(
                    name="{{ input.meta.name }}",
                    id="input-{{ input.meta.id }}",
                    required="",
                    ng-options="val as (val | translate) for val in $ctrl.getInputValues(input).range",
                    ng-model="$ctrl.group[input.meta.name]")
                    option(value="") ⎼⎼
                  span.input-group-addon(ng-show="input.meta.unit")
                    | {{ input.meta.unit | translate }}
              div(ng-switch-when="interval")
                .main__fleets__groups__input.main__fleets__groups__input--select.custom-controls-stacked(ng-if=":: !input.meta.hasslider")
                  legend.main__fleets__groups__input__title {{ input.meta.label | translate }}
                  label.custom-control.custom-radio(ng-repeat="value in $ctrl.getInputValues(input).range track by $index")
                    input(type="radio", required, name="{{ input.meta.name }}", ng-value="value", ng-model="$ctrl.group[input.meta.name]").custom-control-input
                    span.custom-control-indicator
                    span.custom-control-description
                      | &nbsp;{{ value | translate }}
                      span.text-muted.small(uib-tooltip="{{ value + '-tooltip' | translate }}", ng-show="input.meta.hashelp")
                        =" "
                        i.fa.fa-info
                .main__fleets__groups__input.main__fleets__groups__input--slider(ng-if=":: input.meta.hasslider")
                  legend.main__fleets__groups__input__title {{ input.meta.label | translate  }}
                  div(ng-init="$ctrl.group[input.meta.name] = $ctrl.getInputValues(input).value")
                    rzslider(rz-slider-model="$ctrl.group[input.meta.name]", rz-slider-options="$ctrl.getInputValues(input)")

          button.btn.btn-primary(type="submit",
                                 ng-disabled="createForm.$invalid",
                                 ng-click="$ctrl.createGroup('main.fleets.groups')",
                                 ng-show="$ctrl.fleet.groupsLeft() > 1")
            i.fa.fa-plus.fa-fw
            | &nbsp;
            span(ng-bind-html="'group_create_and_add' | translate")
          =" "
          button.btn.btn-secondary(type="submit",
                                   ng-disabled="createForm.$invalid",
                                   ng-click="$ctrl.createGroup('main.visualization')")
            i.fa.fa-bar-chart.fa-fw
            | &nbsp;
            span(ng-bind-html="'group_create_and_visualize' | translate")
