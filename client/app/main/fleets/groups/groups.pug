.main__fleets__groups(ui-view="")
  .main__fleets__groups__header
    h3 {{ 'create_group_title' | translate }}
    p.lead {{ 'create_group_description' | translate }}
  .row
    .col-md-4.push-md-8.text-muted
      |  {{ 'create_group_help' | translate }}
    .col-md-8.pull-md-4
      .card
        form.card-block(name="createForm")
          fieldset.form-group(ng-repeat='input in $ctrl.inputs')
            div(ng-switch=":: input.getType()")
              .row(ng-switch-when="enum", ng-class="{ 'input-group': input.meta.unit }")
                .col-form-label.col-lg-4
                  label(for="input-{{ input.meta.id }}")
                    | {{ input.meta.name | translate }}
                .col-lg-8
                  select.form-control(
                    name="{{ input.meta.name }}",
                    id="input-{{ input.meta.id }}",
                    required="",
                    ng-options="val as (val | translate) for val in $ctrl.getInputValues(input).range",
                    ng-model="$ctrl.group[input.meta.name]")
                    option(value="") ⎼⎼
                  span.input-group-addon(ng-show="input.meta.unit")
                    | {{ input.meta.unit | translate }}
              dov(ng-switch-when="interval")
                .row.main__fleets__groups__input(ng-if=":: !input.meta.hasslider")
                  .col-form-label.col-lg-4
                    label(for="input-{{ input.meta.id }}")
                      | {{ input.meta.label | translate }}
                  .col-lg-8
                    input.form-control(type="number",
                      name="{{ input.meta.name }}",
                      required="",
                      min="{{ $ctrl.getInputValues(input).floor }}",
                      max="{{ $ctrl.getInputValues(input).ceil }}",
                      step="{{ $ctrl.getInputValues(input).step != 1 ? $ctrl.getInputValues(input).step : 'any' }}",
                      ng-model="$ctrl.group[input.meta.name]")
                    span.input-group-addon(ng-show="input.meta.unit")
                      | {{ input.meta.unit | translate }}
                .main__fleets__groups__input.main__fleets__groups__input--slider(ng-if=":: input.meta.hasslider")
                  legend.main__fleets__groups__input__title {{ input.meta.label | translate  }}
                  div(ng-init="$ctrl.group[input.meta.name] = $ctrl.getInputValues(input).value")
                    rzslider(rz-slider-model="$ctrl.group[input.meta.name]", rz-slider-options="$ctrl.getInputValues(input)")
          .row
            .col-lg-8.offset-lg-4
              button.btn.btn-primary.btn-lg(type="submit",
                                     ng-disabled="createForm.$invalid",
                                     ng-click="$ctrl.createGroup()")
                span(ng-bind-html="'group_create' | translate")
          //- div(ng-if="!$ctrl.fleet.isActive()")
            .float-xs-right
              button.btn.btn-secondary(type="submit",
                                        ng-disabled="createForm.$invalid",
                                        ng-click="$ctrl.createGroup('main.visualization')")
                i.fa.fa-bar-chart.fa-fw
                | &nbsp;
                span(ng-bind-html="'group_create_and_visualize' | translate")
            button.btn.btn-primary(type="submit",
                                   ng-disabled="createForm.$invalid",
                                   ng-click="$ctrl.createGroup('main.fleets.groups')",
                                   ng-show="$ctrl.fleet.groupsLeft() > 1")
              i.fa.fa-plus.fa-fw
              | &nbsp;
              span(ng-bind-html="'group_create_and_add' | translate")
