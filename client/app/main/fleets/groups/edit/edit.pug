.main__fleets__groups__edit
  .main__fleets__groups__edit__header
    h3 {{ $ctrl.group.name }}
  form.row(ng-submit="$ctrl.save()", novalidate)
    .col-md-5.push-md-7.push-lg-6
      .main__fleets__groups__edit__sidebar(sticky)
        .card
          .card-block.text-muted
            | {{ 'edit_group_help' | translate }}
          .card-footer.main__fleets__groups__edit__sidebar__footer
            .pull-right(ng-if="!$ctrl.group.special")
              button.btn.btn-link(type="button", ng-click="$ctrl.duplicate()")
                i.fa.fa-fw.fa-files-o
                | &nbsp;{{ 'duplicate' | translate }}
              =" | "
              button.btn.btn-link(type="button",
                mwl-confirm,
                message="{{ 'confirm_deletion_message' | translate }}",
                confirm-button-type="danger",
                placement="left",
                confirm-text="{{ 'confirm_deletion_yes' | translate }}",
                cancel-text="{{ 'confirm_deletion_no' | translate }}",
                on-confirm="$ctrl.delete()")
                i.fa.fa-fw.fa-trash
                span.sr-only {{ 'delete' | translate }}
            button.btn.btn-primary(type="submit", ng-disabled="!$ctrl.hasChanged()")
              | {{ 'save_changes' | translate }}
            =" "
            a.btn.btn-link(ui-sref="main.fleets")
              | {{ 'cancel' | translate }}
    .col-md-7.col-lg-6.pull-md-5
      .card
        .main__fleets__groups__edit__context(ng-repeat='context in $ctrl.contextes', ng-show="context.inputs.length")
          h5.main__fleets__groups__edit__context__heading(sticky='', ng-click="context.open = !context.open")
            .main__fleets__groups__edit__context__heading__color(ng-style="{ background: $ctrl.headingBg }")
            i.fa.fa-caret-down(ng-show="context.open")
            i.fa.fa-caret-up(ng-hide="context.open")
            span &nbsp;{{ context.title }}
          .card-block(ng-show="context.open")
              fieldset(ng-repeat="(section, inputs) in context.sections", ng-show="$ctrl.isVisible(inputs, context._values || context.values)")
                legend(ng-hide="$last && $first") {{ section }}
                .form-group(ng-repeat='input in inputs', ng-show='input.isVisible(context._values || context.values)')
                  label.row
                    .col-lg-5(ng-class=":: { 'col-form-label': input.getType() !== 'boolean' && input.getType() !== 'static' }")
                      | {{ input.meta.name | translate }}
                      span(uib-tooltip-html="input.meta.description | translate", ng-show="input.meta.description")
                        i.fa.fa-info
                    .col-lg-7
                      div(ng-switch=":: input.getType()")
                        div.custom-control.custom-checkbox(ng-switch-when="boolean")
                          input.custom-control-input(type="checkbox",
                          name="{{ input.meta.name }}",
                          ng-model="$ctrl.gs(context, input.meta.name)",
                          ng-model-options="{ getterSetter: true }")
                          span.custom-control-indicator
                        div(ng-switch-when="enum", ng-class="{ 'input-group': input.meta.unit }")
                          select.form-control(
                            name="{{ input.meta.name }}",
                            ng-options="val as (val | translate) for val in $ctrl.getInputValues(input, context).range",
                            ng-model="$ctrl.gs(context, input.meta.name)",
                            ng-model-options="{ getterSetter: true }")
                              option(value="") ⎼⎼
                          span.input-group-addon(ng-show="input.meta.unit")
                            | {{ input.meta.unit | translate }}
                        div(ng-switch-when="interval", ng-class="{ 'input-group': input.meta.unit }")
                          input.form-control(type="number",
                            name="{{ input.meta.name }}",
                            min="{{ $ctrl.getInputValues(input, context).floor }}",
                            max="{{ $ctrl.getInputValues(input, context).ceil }}",
                            step="{{ $ctrl.getInputValues(input, context).step != 1 ? $ctrl.getInputValues(input, context).step : 'any' }}",
                            ng-model="$ctrl.gs(context, input.meta.name)",
                            ng-model-options="{ getterSetter: true }")
                          span.input-group-addon(ng-show="input.meta.unit")
                            | {{ input.meta.unit | translate }}
                        div(ng-switch-when="string")
                          input.form-control(type="text",
                            name="{{ input.meta.name }}",
                            ng-model="$ctrl.gs(context, input.meta.name)",
                            ng-model-options="{ getterSetter: true }")
                          span.input-group-addon(ng-show="input.meta.unit")
                            | {{ input.meta.unit | translate }}
                        div(ng-switch-when="color")
                          input.form-control(type="text",
                            name="{{ input.meta.name }}",
                            data-color="{{ $ctrl.gs(context, input.meta.name)() }}",
                            colorpicker="",
                            ng-model="$ctrl.gs(context, input.meta.name)",
                            ng-model-options="{ getterSetter: true }")
                        div(ng-switch-default)
                          strong {{ context.values[input.meta.name] | number:2 }}
                          span &nbsp;{{ input.meta.unit | translate }}
